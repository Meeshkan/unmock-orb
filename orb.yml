version: 2.1
description: >
  Use unmock to mock API integrations in your CircleCI builds.
  Repo Home: https://github.com/unmock/unmock-orb
  Website: https://www.unmock.io/

orbs:
  jq: circleci/jq@1.9.0

parameters: &parameters
  file:
    type: string
    description: "Path to test report"
    default: "__unmock__/unmock-report.html"

check_report: &check_report
  name: Check report exists
  command: |
    REPORT_FILE=<< parameters.file >>

    if [ -z ${REPORT_FILE} ];
    then
      echo "Empty or missing environment variable: REPORT_FILE";
      exit 1;
    fi;

    if [ -f ${REPORT_FILE} ];  # File exists
    then
        echo "Found file, proceeding with: ${REPORT_FILE}"
    else
        echo "Report not found: ${REPORT_FILE}, exiting."
        exit 1;
    fi

commands:
  store:
    description: "Stores Unmock test report as a CircleCI artifact"
    parameters: *parameters
    steps:
      - run: *check_report
      - store_artifacts:
          path: << parameters.file >>
      - jq/install
      - run:
        command: |
          ARTIFACTS_URL=https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}/artifacts
          echo "URL: ${ARTIFACTS_URL}"
  upload:
    description: "Uploads unmock jest-reporter results and makes a note on your PR if you have a GH integration. The orb is in early alpha stage, and its usage should be considered experimental. Note that the uploaded report will be publicly available on the internet. If your tests in CircleCI use real API keys or tokens for HTTP requests, this orb is not (yet) for you. Any and all feedback is appreciated!"
    parameters: *parameters
    steps:
      - run: *check_report
      - run:
          name: Print BUILD_URL
          command: |
            echo "Your test report lives here: ${CIRCLE_BUILD_URL}"
      - run:
          name: Upload file and post notification
          command: |
            # Exit script if a statement returns a non-true return value.
            set -o errexit

            # Use the error status of the first failure, rather than that of the last item in a pipeline.
            set -o pipefail

            # Post the report and save URL
            REPORT_URL=$(curl -F 'html=@"'"${REPORT_FILE}"'"' https://unmock-ci.azurewebsites.net/reports)
            echo "Uploaded the report to ${REPORT_URL}"

            # If running for a pull-request, try sending a notification
            if [ ! -z ${CIRCLE_PULL_REQUEST} ];
            then
              REPLY_CODE=$(curl -i --header "Content-Type: application/json" --request POST --data '{"pr":"'"${CIRCLE_PULL_REQUEST}"'","sha1":"'"${CIRCLE_SHA1}"'","url":"'"${REPORT_URL}"'"}' https://unmock-ci.azurewebsites.net/notifications/github |
              head -n 1 |  # Keep first line of response
              cut -d$' ' -f2)  # Split the line and take the second value (status code)

              if [ ! ${REPLY_CODE} == 200 ];
              then
                echo "Failed sending notification, got reply with code: ${REPLY_CODE}";
              else
                echo "Sent notification."
              fi;

            else
              echo "Not a pull-request, skipping sending notification."
            fi
            echo "Your test report lives here: ${REPORT_URL}. Enjoy!"

examples:
  upload:
    description: "Upload your Unmock test reporter files."
    usage:
      version: 2.1
      orbs:
        unmock: unmock/unmock@0.0.8
      jobs:
        build:
          docker:
            # specify the version you desire here
            - image: circleci/node:10.15.1

          working_directory: ~/repo

          steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                keys:
                  - v1-dependencies-{{ checksum "package.json" }}
                  # fallback to using the latest cache if no exact match is found
                  - v1-dependencies-

            - run: yarn install

            - save_cache:
                paths:
                  - node_modules
                key: v1-dependencies-{{ checksum "package.json" }}

            # run tests!
            - run: yarn test
            - unmock/upload:
                file: "__unmock__/report.html"
